if game.PlaceId == 4225025295 then
    local rf = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
    local win = rf:CreateWindow({
        Name = "Money Hub",
        Icon = 0,
        LoadingTitle = "Loading Best op Ninja Simulator Script",
        LoadingSubtitle = "by Money",
        Theme = "Default",
        DisableRayfieldPrompts = false,
        DisableBuildWarnings = false,
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "Luau",
            FileName = "Big Bro"
        },
        Discord = {
            Enabled = true,
            Invite = "KvvHREvB",
            RememberJoins = true
        },
        KeySystem = true,
        KeySettings = {
            Title = "Key System",
            Subtitle = "https://discord.gg/KvvHREvB",
            Note = "Join Discord to Get Key",
            FileName = "Key",
            SaveKey = true,
            GrabKeyFromSite = true,
            Key = {"MoneyProYe"}
        }
    })

    local Tab = win:CreateTab("Farm", 4483362458)
    local rs = game:GetService("RunService")
    local Players = game:GetService("Players")
    local lp = Players.LocalPlayer
    local ts = game:GetService("TweenService")
    local vu = game:GetService("VirtualUser")

    ----------------------------------------------------------------
    -- Auto Train Toggle
    -- Iterates over every Tool in LocalPlayer.Character and calls Activate()
    ----------------------------------------------------------------
    local autoTrainCon
    local AutoTrainToggle = Tab:CreateToggle({
        Name = "Auto Train",
        CurrentValue = false,
        Flag = "Toggle_AutoTrain",
        Callback = function(enabled)
            local char = lp.Character or lp.CharacterAdded:Wait()
            if enabled then
                autoTrainCon = rs.RenderStepped:Connect(function()
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") then
                            pcall(function()
                                tool:Activate()
                            end)
                        end
                    end
                end)
            else
                if autoTrainCon then
                    autoTrainCon:Disconnect()
                    autoTrainCon = nil
                end
            end
        end,
    })

    ----------------------------------------------------------------
    -- Fast Slash Toggle
    -- Iterates over every Tool in LocalPlayer.Character and forces tool.Enabled = true
    ----------------------------------------------------------------
    local fastSlashCon
    local FastSlashToggle = Tab:CreateToggle({
        Name = "Fast Slash",
        CurrentValue = false,
        Flag = "Toggle_FastSlash",
        Callback = function(enabled)
            local char = lp.Character or lp.CharacterAdded:Wait()
            if enabled then
                fastSlashCon = rs.RenderStepped:Connect(function()
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") then
                            pcall(function()
                                tool.Enabled = true
                            end)
                        end
                    end
                end)
            else
                if fastSlashCon then
                    fastSlashCon:Disconnect()
                    fastSlashCon = nil
                end
            end
        end,
    })

    ----------------------------------------------------------------
    -- Helper: Simulate a mouse click on a GUI button using VirtualUser
    ----------------------------------------------------------------
    local function simulateClick(guiButton)
        if guiButton and guiButton.AbsolutePosition and guiButton.AbsoluteSize and guiButton.Visible then
            local pos = guiButton.AbsolutePosition + (guiButton.AbsoluteSize * 0.5)
            vu:Button1Down(pos)
            task.wait(0.1)
            vu:Button1Up(pos)
        end
    end

    ----------------------------------------------------------------
    -- Auto Upgrade Toggle
    -- Uses VirtualUser to simulate mouse clicks on upgrade buttons:
    --   MainGui.UpgradeF.SwordF.SwordImgBtn
    --   MainGui.UpgradeF.Class.ClassImgBtn
    --   MainGui.UpgradeF.AscendF.AscendImgBtn
    -- Make sure your Upgrade screen is open.
    ----------------------------------------------------------------
    local autoUpgradeCon
    local AutoUpgradeToggle = Tab:CreateToggle({
        Name = "Auto Upgrade",
        CurrentValue = false,
        Flag = "Toggle_AutoUpgrade",
        Callback = function(enabled)
            if enabled then
                warn("Ensure your Upgrade screen is open for Auto Upgrade!")
                autoUpgradeCon = rs.RenderStepped:Connect(function()
                    local pg = lp:FindFirstChild("PlayerGui")
                    if pg then
                        local mainGui = pg:FindFirstChild("MainGui")
                        if mainGui then
                            local upg = mainGui:FindFirstChild("UpgradeF")
                            if upg then
                                local swordBtn = upg:FindFirstChild("SwordF") and upg.SwordF:FindFirstChild("SwordImgBtn")
                                local classBtn = upg:FindFirstChild("Class") and upg.Class:FindFirstChild("ClassImgBtn")
                                local ascendBtn = upg:FindFirstChild("AscendF") and upg.AscendF:FindFirstChild("AscendImgBtn")
                                if swordBtn then
                                    pcall(function() simulateClick(swordBtn) end)
                                end
                                if classBtn then
                                    pcall(function() simulateClick(classBtn) end)
                                end
                                if ascendBtn then
                                    pcall(function() simulateClick(ascendBtn) end)
                                end
                            end
                        end
                    end
                end)
            else
                if autoUpgradeCon then
                    autoUpgradeCon:Disconnect()
                    autoUpgradeCon = nil
                end
            end
        end,
    })

    win:LoadConfiguration()
end
